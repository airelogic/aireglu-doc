import{_ as e,c as t,o as a,a4 as s}from"./chunks/framework.ttppV29E.js";const r="/assets/http-response-handler.BmluLTpD.png",T=JSON.parse('{"title":"HTTP Response Handler","description":"","frontmatter":{},"headers":[],"relativePath":"docs/endpoints/http-response-handler.md","filePath":"docs/endpoints/http-response-handler.md","lastUpdated":1742396945000}'),n={name:"docs/endpoints/http-response-handler.md"},o=s('<h1 id="http-response-handler" tabindex="-1">HTTP Response Handler <a class="header-anchor" href="#http-response-handler" aria-label="Permalink to &quot;HTTP Response Handler&quot;">​</a></h1><p>This page is about the task for handling the response of the <a href="./http-request.html">HTTP Request</a> task. If you are looking to return data from the endpoint, please <a href="./http-response.html">see HTTP Response instead.</a></p><p>The HTTP Response Handler is only used when paired with an <a href="./http-request.html">HTTP Request</a>. This pairing is defined when creating the tasks. A Response Handler is not required if you do not care about the result of the HTTP Request.</p><p><img src="'+r+`" alt="HTTP Response Handler"></p><p>There are currently 3 types of Response Handler available for use. The most common of these is Receive, however Forward, and Transparent Forward are also available.</p><h2 id="receive-handlers" tabindex="-1">Receive Handlers <a class="header-anchor" href="#receive-handlers" aria-label="Permalink to &quot;Receive Handlers&quot;">​</a></h2><p>The most common handler, Receive lets you define the expected shape of the data that you get back from the request, andd store it for use by later tasks. This is accomplished by creating a schema that the returned data must match. It can then be accessed by future tasks in the same manner as the input data, or <a href="./mapping.html">Mapping</a> tasks.</p><p>It is possible to receive streams from a HTTP Request and map them into another task. However, in order to consume the stream in a task you must encode it to a base64 string by using the inbuilt function <code>--*AG:Base64Encode(String or Stream To Encode)*--</code>.</p><p>e.g.</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;foo&quot;: --*AG:Base64Encode(--*responseStream*--)*--</span></span>
<span class="line"><span>}</span></span></code></pre></div><p>Where <code> &quot;--*responseStream*--&quot;</code> is a reference to the stream of a reasponse handler task.</p><p>If you attempt to return a stream without encoding it in an output task which is set to a data type such JSON or XML you will receive a string reference to the stream and not the stream itself.</p><p>e.g</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>  &quot;myJson&quot;: &quot;--*responseStream*--&quot; // this will return &quot;Stream Content&quot;</span></span>
<span class="line"><span>}</span></span></code></pre></div><h2 id="forward-handlers" tabindex="-1">Forward handlers <a class="header-anchor" href="#forward-handlers" aria-label="Permalink to &quot;Forward handlers&quot;">​</a></h2><p>A Forward handler lets you take the data from the response, modify it, and immediately send it on to another service. You can configure this request in the same manner as any other <a href="./http-request.html">HTTP Request</a> task.</p><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>It is not currently possible to process the data returned from this forwarded request. If you wish to do this, you should instead make a Receive handler, and a secondary <a href="./http-request.html">HTTP Request</a> task and Response handler to handle the forwarding of the request.</p></div><h2 id="transparent-forward-handlers" tabindex="-1">Transparent Forward Handlers <a class="header-anchor" href="#transparent-forward-handlers" aria-label="Permalink to &quot;Transparent Forward Handlers&quot;">​</a></h2><p>Much like the Forward handler, the Transparent Forward lets you take the response from a request and immediately forward it to another service. Unlike the Forward Handler however, it is not possible the change the body of this request. You may still configure endpoints, certificates, and headers like any other <a href="./http-request.html">HTTP Request</a> however.</p><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>It is not currently possible to process the data returned from this forwarded request. If you wish to do this, you should instead make a Receive handler, and a secondary <a href="./http-request.html">HTTP Request</a> task and Response handler to handle the forwarding of the request.</p></div>`,20),i=[o];function h(d,p,l,c,u,m){return a(),t("div",null,i)}const b=e(n,[["render",h]]);export{T as __pageData,b as default};
