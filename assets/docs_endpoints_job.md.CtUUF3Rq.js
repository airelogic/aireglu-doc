import{_ as e,c as t,o as a,a4 as o}from"./chunks/framework.ttppV29E.js";const s="/assets/job-datav2.B4lRAfxV.png",n="/assets/job-schedule-visualv2.CMpKXiSX.png",r="/assets/job-schedule-cronv2.8cPrLdVD.png",j=JSON.parse('{"title":"Job Tasks","description":"","frontmatter":{},"headers":[],"relativePath":"docs/endpoints/job.md","filePath":"docs/endpoints/job.md","lastUpdated":1756461369000}'),i={name:"docs/endpoints/job.md"},d=o('<h1 id="job-tasks" tabindex="-1">Job Tasks <a class="header-anchor" href="#job-tasks" aria-label="Permalink to &quot;Job Tasks&quot;">​</a></h1><p>There are three tasks for Job management:</p><ul><li>Create Job</li><li>Update Job Schedule</li><li>Delete Job</li></ul><blockquote><p>The three Jobs tasks in the new (v2) editor are combined into one task into the existing (v1) editor</p></blockquote><p>The Job tasks give you the ability to create, update and delete jobs from within an Endpoint instead of manually via the <a href="/docs/getting-started/jobs.html">Jobs page</a>. This allows you to automatically create, update or delete jobs as needed.</p><h2 id="create-job" tabindex="-1">Create Job <a class="header-anchor" href="#create-job" aria-label="Permalink to &quot;Create Job&quot;">​</a></h2><p><img src="'+s+'" alt="Creating a job"><br> To create a job, ensure <code>Create</code> is the selected option. From here you can name the job, select the endpoint you want to run, what data it should have, and set the schedule. You can also set <code>Disable on failure</code>, to turn the job off if it doesn&#39;t work. You can always turn it back on manually later. When defining the job name, you should try and ensure it will be unique. The name and the endpoint data can both accept fields from the context panel.</p><p><img src="'+n+'" alt="Creating a job"><br> For setting the schedule, you can either use the visual editor options to set a pattern, or use a <a href="https://en.wikipedia.org/wiki/Cron" target="_blank" rel="noreferrer">cron expression</a>. Cron expressions are in the standard Linux format. For advanced use cases, you can define the schedule using fields from the Context panel as well.</p><p><img src="'+r+'" alt="Creating a job"></p><p>When you&#39;re done, simply click &quot;Save Changes&quot;.</p><h2 id="update-job-schedule" tabindex="-1">Update Job Schedule <a class="header-anchor" href="#update-job-schedule" aria-label="Permalink to &quot;Update Job Schedule&quot;">​</a></h2><p>To update a job schedule you must specify the name of a job that will already exist when the endpoint runs. Then set the schedule as you would when creating a new job.</p><h2 id="delete-job" tabindex="-1">Delete Job <a class="header-anchor" href="#delete-job" aria-label="Permalink to &quot;Delete Job&quot;">​</a></h2><p>To remove a job is pretty simple. All you need to do is choose the Delete Job Task <code>Remove</code>, and enter the job name. Like creating or scheduling a job, this can include data fields from the Context panel, and should be the name of the job you want to delete.</p>',14),l=[d];function h(c,u,b,p,m,f){return a(),t("div",null,l)}const g=e(i,[["render",h]]);export{j as __pageData,g as default};
