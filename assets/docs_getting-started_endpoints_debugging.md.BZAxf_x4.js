import{_ as e,c as t,o as a,a4 as i}from"./chunks/framework.ttppV29E.js";const o="/assets/debug-enable.Bn6bLv72.png",n="/assets/debug-delete.85iYk-uB.png",f=JSON.parse('{"title":"Debug mode","description":"","frontmatter":{},"headers":[],"relativePath":"docs/getting-started/endpoints/debugging.md","filePath":"docs/getting-started/endpoints/debugging.md","lastUpdated":1756978509000}'),s={name:"docs/getting-started/endpoints/debugging.md"},d=i('<h1 id="debug-mode" tabindex="-1">Debug mode <a class="header-anchor" href="#debug-mode" aria-label="Permalink to &quot;Debug mode&quot;">​</a></h1><p>Debug Mode is a diagnostic tool in AireGlu that provides additional contextual information about endpoint executions. When enabled, Debug Mode records detailed information about each step in your endpoint&#39;s processing pipeline, allowing you to inspect the inputs, outputs, and behavior of your tasks.</p><p>When Debug Mode is enabled, the following features are available:</p><h3 id="detailed-execution-logging" tabindex="-1">Detailed Execution Logging <a class="header-anchor" href="#detailed-execution-logging" aria-label="Permalink to &quot;Detailed Execution Logging&quot;">​</a></h3><ul><li>Select task executions are fully logged with input and output data</li><li>Request and response payloads are captured</li><li>Task execution times are recorded</li><li>Error details are preserved with full context</li></ul><p>Debug data can be accessed via the Metrics dashboard on the Usage Data tab as shown in the <a href="/docs/getting-started/metrics.html">metrics section</a>.</p><h3 id="enabling-debug-mode" tabindex="-1">Enabling Debug Mode <a class="header-anchor" href="#enabling-debug-mode" aria-label="Permalink to &quot;Enabling Debug Mode&quot;">​</a></h3><p>Debug Mode can be set for each endpoint version. It defaults to OFF. It can be enabled as follows:</p><ol><li>Navigate to the Endpoints section</li><li>Select the endpoint you wish to debug</li><li>Toggle the &quot;Debug Mode&quot; switch to the ON position</li></ol><p><img src="'+o+'" alt="debug"></p><h3 id="security-considerations" tabindex="-1">Security Considerations <a class="header-anchor" href="#security-considerations" aria-label="Permalink to &quot;Security Considerations&quot;">​</a></h3><p><strong>Important</strong>: Debug Mode may expose sensitive information in logs. Exercise caution when using this feature:</p><ul><li>Only enable Debug Mode when actively troubleshooting an issue</li><li>Deactivate Debug Mode in production environments when not needed</li><li>Be aware that sensitive data like authentication tokens, personal information, or confidential business data may be visible in debug logs</li></ul><h3 id="clearing-debug-data" tabindex="-1">Clearing Debug data <a class="header-anchor" href="#clearing-debug-data" aria-label="Permalink to &quot;Clearing Debug data&quot;">​</a></h3><p>To remove all debug information from the system:</p><ul><li>Navigate to the Metrics section</li><li>Select the &quot;Usage Data&quot; tab</li><li>Click the three-dots menu (⋮) in the upper right corner</li><li>Select &quot;Delete all debug data&quot; from the dropdown menu</li></ul><p>This operation cannot be undone, so ensure you no longer need the debug information before proceeding. <img src="'+n+'" alt="debug"></p>',17),l=[d];function r(u,g,c,b,h,p){return a(),t("div",null,l)}const _=e(s,[["render",r]]);export{f as __pageData,_ as default};
