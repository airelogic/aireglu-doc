import{_ as e,c as t,o as s,a4 as n}from"./chunks/framework.ttppV29E.js";const a="/assets/define-endpoint.D378qu-5.png",i="/assets/define-input.C-MZinNZ.png",o="/assets/define-email.CrZ-tUyE.png",p="/assets/fin.DPJf8QIK.png",d="/assets/email.BAmAXZ2b.png",_=JSON.parse('{"title":"Your First Endpoint","description":"","frontmatter":{},"headers":[],"relativePath":"docs/getting-started/index.md","filePath":"docs/getting-started/index.md","lastUpdated":1733307058000}'),l={name:"docs/getting-started/index.md"},r=n('<h1 id="your-first-endpoint" tabindex="-1">Your First Endpoint <a class="header-anchor" href="#your-first-endpoint" aria-label="Permalink to &quot;Your First Endpoint&quot;">â€‹</a></h1><p>Endpoints in AireGlu are where the magic happens. At the most basic level they accept data, then do something with it. This could be as simple as sending an email, or as a complex multi-system processing task.</p><p>To keep things simple, for your first endpoint we&#39;ll take in some data and use it to create and send an email. Head over to the Endpoints page using the top menu, and click the plus button at the top to add a new endpoint.</p><p><img src="'+a+'" alt="Endpoints"></p><p>The first step is to define our endpoint name and tasks it will perform. We&#39;ll go through and add details to these tasks later. The Endpoint Name is important. This should be descriptive, but not too long because it&#39;s used in the url for the endpoint. Task names should also be descriptive for your reference later. In our case, we&#39;ll use <code>email-test-A</code> as an endpoint name. We also create a single Email type task called <code>Send an email</code>. Hit the Next button at the bottom to continue.</p><p><img src="'+i+`" alt="Endpoints"></p><p>Our next step is to define our input data. You can type this yourself, or copy and paste the output of your application. For this, we only need something simple, so paste the following into the left side. You should ensure that the format selected is JSON.</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;John Smith&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;john@example.com&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Hit the Next button when you&#39;re ready.</p><p><img src="`+o+'" alt="Endpoints"></p><p>Now we define our email. Click into the To textbox, and then click the left arrow next to <code>email</code> on the right. This will tell AireGlu that you want to use the email field from our input data as the recipient. Add a subject, and the message of your email. In both of these fields you can click the arrow next to a field to add that data. Add the <code>name</code> field to the body to give the message a personal feel.</p><p>Scroll down and click Next when you&#39;re done.</p><p><img src="'+p+'" alt="Endpoints"></p><p>Finally, we&#39;re ready to deploy. Make a note of the Endpoint URL - you&#39;ll need to have your app point at this. Select your environments, and click Save &amp; Deploy to finish!</p><p><img src="'+d+'" alt="Endpoints"></p><p>Use your app to send your data to your new Endpoint, and then check your email! Congratulations on completing your first AireGlu Endpoint!</p><p>Check out the Endpoints documentation for more detailed examples, and explanations of the other tasks and formats you can use.</p>',17),h=[r];function c(u,m,g,k,f,y){return s(),t("div",null,h)}const b=e(l,[["render",c]]);export{_ as __pageData,b as default};
