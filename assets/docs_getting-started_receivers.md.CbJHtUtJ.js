import{_ as i,c as s,o as e,a4 as a}from"./chunks/framework.ttppV29E.js";const u=JSON.parse('{"title":"Receivers","description":"","frontmatter":{},"headers":[],"relativePath":"docs/getting-started/receivers.md","filePath":"docs/getting-started/receivers.md","lastUpdated":1732549756000}'),t={name:"docs/getting-started/receivers.md"},n=a(`<h1 id="receivers" tabindex="-1">Receivers <a class="header-anchor" href="#receivers" aria-label="Permalink to &quot;Receivers&quot;">​</a></h1><p>Receivers are similar to Jobs in that they allow endpoints to be invoked by means other than calling them directly. In this case, they allow for monitoring an email or GovNotify SMS inbox, and run the endpoint with the content of any messages that arrive with the chosen Subject prefix. MESH receivers are also available for tenants which have been granted access.</p><h2 id="creating-an-email-or-govnotify-sms-receiver" tabindex="-1">Creating an email or GovNotify SMS Receiver <a class="header-anchor" href="#creating-an-email-or-govnotify-sms-receiver" aria-label="Permalink to &quot;Creating an email or GovNotify SMS Receiver&quot;">​</a></h2><p>Creating a Receiver is simple enough, and just requires a few details to be able to log into the account you wish to monitor. To quickly get started, you can follow these steps:</p><ul><li>Enter a name for the Receiver in the <code>Name</code> field</li><li>Select the receiver type</li><li>Enter an email in the <code>Error Email</code> field if you want to be notified of any problems</li><li>Tick <code>Disable on failure</code> if you want to stop attempting to process other messages when there&#39;s a problem</li><li>Select the endpoint you wish to run</li><li>Select the version of the endpoint you wish to run - if you don&#39;t select a version then Production will be set</li><li>Shape your endpoint input (see <code>Shaping the data</code> below for details on how to do this) If using email:</li><li>Enter the POP3 address for the server in the <code>POP3 Email Receiver</code> field. e.g. <code>pop.gmail.com:995</code></li><li>Choose a Subject Prefix for your emails. The Receiver will trigger whenever an email with a subject that starts with this arrives</li><li>Enter your email&#39;s username and password. Your username is often the email address, or the start of your email address (before the @) depending on your provider If using GovNotify SMS:</li><li>Enter the source and destination number</li><li>Choose a Message pattern for your emails. The Receiver will trigger whenever a message that starts with this pattern arrives</li><li>Enter the password associated with your GovNotify account</li></ul><h3 id="shaping-the-data" tabindex="-1">Shaping the data <a class="header-anchor" href="#shaping-the-data" aria-label="Permalink to &quot;Shaping the data&quot;">​</a></h3><p>Often, the email will not directly contain exactly the information you want in exactly the right format. In order to better allow you to get what you need, you can access various properties in the email using the <a href="/docs/quickstart/liquid.html">Liquid</a> object <code>data</code>. This object takes the following shape:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;Headers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;From&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;email&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;To&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;email&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;Subject&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;text&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;Date&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;date&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;Content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;text&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;Attachments&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;FileName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;text&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;Bytes&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;base64&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;Text&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;text&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;FileSize&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">&lt;int&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;ContentType&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;mimetype&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>For example, if you wanted to get the sender of the email, you would use <code>\\{\\{ data.Headers.From }}</code>.</p><h3 id="archive-attachments-email-only" tabindex="-1">Archive Attachments (Email only) <a class="header-anchor" href="#archive-attachments-email-only" aria-label="Permalink to &quot;Archive Attachments (Email only)&quot;">​</a></h3><p>AireGlu has the ability to extract files from ZIP archives and provide the data from that field instead. To do this, you should enter the expected filename of the ZIP file, and the file name of the file you wish to extract. If the ZIP file is password protected, then you should enter the password needed to extract it.</p><p>The extracted file can be accessed via the <code>Attachments</code> property.</p><h2 id="mesh-receiver" tabindex="-1">MESH Receiver <a class="header-anchor" href="#mesh-receiver" aria-label="Permalink to &quot;MESH Receiver&quot;">​</a></h2><p>Data can be retrieved from a MESH mailbox and made available in the following format:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;Headers&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;SenderMailboxId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;mailbox id&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;RecipientMailboxId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;mailbox id&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;Subject&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;text&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;WorkflowId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;id&gt;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;MessageId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;id&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;Content&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&lt;base64&gt;&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>The content of a MESH message can be either text or binary file type. Therefore, AireGlu will return the content of the message as a base64 string. If you are expecting a text file, you can decode the base64 string by calling the inbuilt mapping function like so:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>--*AG:Base64Decode({{data.Content}})*--</span></span></code></pre></div>`,17),l=[n];function h(o,r,p,k,d,c){return e(),s("div",null,l)}const g=i(t,[["render",h]]);export{u as __pageData,g as default};
