import{_ as e,c as t,o as a,a4 as i}from"./chunks/framework.ttppV29E.js";const o="/assets/variables.C269OYwl.png",n="/assets/variable-scopes.BSGSq3oM.png",f=JSON.parse('{"title":"Variables","description":"","frontmatter":{},"headers":[],"relativePath":"docs/getting-started/variables.md","filePath":"docs/getting-started/variables.md","lastUpdated":1741687250000}'),s={name:"docs/getting-started/variables.md"},r=i('<h1 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">​</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p><img src="'+o+'" alt="variables"></p><p>Variables are, like secrets, a set of key-value data pairs for use in endpoint tasks. Unlike secrets however, they are not private and not protected. This means that they can be viewed, and are unsuitable for sensitive data. Additionally, they can be set with multiple scopes, allowing different conditions to access different data for the same variable.</p><p>Adding a new variable is accomplished by clicking the large <code>+</code> button at the top of the screen, entering a name, and at least one Scope (see below), followed by hitting Save.</p><h2 id="scopes" tabindex="-1">Scopes <a class="header-anchor" href="#scopes" aria-label="Permalink to &quot;Scopes&quot;">​</a></h2><p>Scopes allow for different values to be presented based on the context. The following scopes are currently available to variables:</p><ul><li>System</li><li>Tenant</li><li>Endpoint</li><li>Endpoint Environment</li><li>Endpoint Version</li></ul><p>If multiple scopes are added, they are attempted in order with Endpoint Version having highest priority for a match, and System having lowest.</p><p><img src="'+n+'" alt="variable scopes"></p><p>Using the above configuration as our example, if the Endpoint we run is <code>magic</code>, our <code>test</code> variable will result in <code>value 1</code>. This is because Tenant is the only scope that matches this endpoint, with the other scopes expecting the <code>spell</code> endpoint. If however, version 1 of our <code>spell</code> endpoint is in production, and we access that, then we can expect to get <code>value 4</code>. This is because Endpoint Version has the highest priority, even though all of the scopes match.</p><h3 id="system" tabindex="-1">System <a class="header-anchor" href="#system" aria-label="Permalink to &quot;System&quot;">​</a></h3><p><em>priority 5</em><br> System scoped variables are not definable directly by a user, and instead are specified in config files for the AireGlu install itself. This scope has the lowest priority in the chain.</p><h3 id="tenant" tabindex="-1">Tenant <a class="header-anchor" href="#tenant" aria-label="Permalink to &quot;Tenant&quot;">​</a></h3><p><em>priority 4</em><br> A tenant-scoped value is accessible to all endpoints on the current account.</p><h3 id="endpoint" tabindex="-1">Endpoint <a class="header-anchor" href="#endpoint" aria-label="Permalink to &quot;Endpoint&quot;">​</a></h3><p><em>priority 3</em><br> Values in this scope are available only to the specified endpoint, regardless of version or environment.</p><h3 id="endpoint-environment" tabindex="-1">Endpoint Environment <a class="header-anchor" href="#endpoint-environment" aria-label="Permalink to &quot;Endpoint Environment&quot;">​</a></h3><p><em>priority 2</em><br> The endpoint environment scope allows values to only be passed to Staging or Production endpoints, as specified. It also requires a specific endpoint to be named, and will not provide values to other endpoints. Other versions of the endpoint will also not get these values.</p><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>If an environment is named in the URL, this will take priority over endpoint versions. Additionally, if no version or environment is named in the url, then production is assumed and also takes priority over endpoint versions.</p></div><h3 id="endpoint-version" tabindex="-1">Endpoint Version <a class="header-anchor" href="#endpoint-version" aria-label="Permalink to &quot;Endpoint Version&quot;">​</a></h3><p><em>priority 1</em><br> This is the highest priority scope, and targets a specific version of a specific endpoint. If this scope matches, then it is always used, regardless of any other matching scopes.</p><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>This scope only applies when a version is specified in the URL of the endpoint.</p></div><h2 id="secret-variables" tabindex="-1">Secret Variables <a class="header-anchor" href="#secret-variables" aria-label="Permalink to &quot;Secret Variables&quot;">​</a></h2><p>By clicking the key icon in the value field when creating a variable, you can tell it to reference a Secret instead. This allows you to apply secrets to different scopes in the same way as you would a regular variable. Be aware that this still does not let you see the value of the secret you choose.</p>',25),l=[r];function c(d,p,h,u,b,m){return a(),t("div",null,l)}const y=e(s,[["render",c]]);export{f as __pageData,y as default};
