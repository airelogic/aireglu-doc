import{_ as e,c as a,o as t,a4 as i}from"./chunks/framework.ttppV29E.js";const s="/assets/variables.CiXuPseM.png",o="/assets/variable-scopes.BHDgBekx.png",m=JSON.parse('{"title":"Variables","description":"","frontmatter":{},"headers":[],"relativePath":"docs/getting-started/variables.md","filePath":"docs/getting-started/variables.md","lastUpdated":1755695027000}'),n={name:"docs/getting-started/variables.md"},r=i('<h1 id="variables" tabindex="-1">Variables <a class="header-anchor" href="#variables" aria-label="Permalink to &quot;Variables&quot;">​</a></h1><h2 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction&quot;">​</a></h2><p><img src="'+s+'" alt="variables"></p><p>Variables are, like secrets, a set of key-value data pairs for use in endpoint tasks. Unlike secrets however, they are not private and not protected. This means that they can be viewed, and are unsuitable for sensitive data. Additionally, they can be set with multiple scopes, allowing different conditions to access different data for the same variable.</p><p>Adding a new variable is accomplished by clicking the <code>+</code> button at the top right of the screen, entering a name, and at least one value (see below), followed by hitting Save.</p><h2 id="default-value-and-scopes" tabindex="-1">Default value and scopes <a class="header-anchor" href="#default-value-and-scopes" aria-label="Permalink to &quot;Default value and scopes&quot;">​</a></h2><p>A variable must have either a default value or at least one scope. Scopes allow for different values to be presented based on the context. The following scopes are currently available to variables in addition to the default value:</p><ul><li>Endpoint</li><li>Endpoint Version</li></ul><p>If one or more scopes are added, they are attempted in order with Endpoint Version having highest priority for a match, and the default value the lowest.</p><p><img src="'+o+'" alt="variable scopes"></p><h3 id="default" tabindex="-1">Default <a class="header-anchor" href="#default" aria-label="Permalink to &quot;Default&quot;">​</a></h3><p><em>priority 3</em><br> The default value for a variable is accessible to all endpoints on the current tenant.</p><h3 id="endpoint" tabindex="-1">Endpoint <a class="header-anchor" href="#endpoint" aria-label="Permalink to &quot;Endpoint&quot;">​</a></h3><p><em>priority 2</em><br> Values in this scope are available only to the specified endpoint, regardless of version.</p><h3 id="endpoint-version" tabindex="-1">Endpoint Version <a class="header-anchor" href="#endpoint-version" aria-label="Permalink to &quot;Endpoint Version&quot;">​</a></h3><p><em>priority 1</em><br> This is the highest priority scope, and targets a specific version of a specific endpoint. If this scope matches, then it is always used, regardless of any other matching scopes.</p><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>This scope only applies when a version is specified in the URL of the endpoint, and not when the default URL is used for an endpoint.</p></div><h2 id="secret-variables" tabindex="-1">Secret Variables <a class="header-anchor" href="#secret-variables" aria-label="Permalink to &quot;Secret Variables&quot;">​</a></h2><p>By clicking the key icon in the value field when creating a variable, you can tell it to reference a Secret instead. This allows you to apply secrets to different scopes in the same way as you would a regular variable. Be aware that this still does not let you see the value of the secret you choose.</p>',19),l=[r];function d(c,h,p,u,f,b){return t(),a("div",null,l)}const _=e(n,[["render",d]]);export{m as __pageData,_ as default};
