import{_ as e,c as t,o,a4 as a}from"./chunks/framework.ttppV29E.js";const n="/assets/define-endpoint.BJGwjFfS.png",i="/assets/input-data.Dx45oGny.png",r="/assets/email.CkPtFwAw.png",k=JSON.parse('{"title":"forms4health Integration","description":"","frontmatter":{},"headers":[],"relativePath":"docs/quickstart/forms4health.md","filePath":"docs/quickstart/forms4health.md","lastUpdated":1742206798000}'),s={name:"docs/quickstart/forms4health.md"},h=a('<h1 id="forms4health-integration" tabindex="-1">forms4health Integration <a class="header-anchor" href="#forms4health-integration" aria-label="Permalink to &quot;forms4health Integration&quot;">​</a></h1><p>This guide will cover the steps needed to create an endpoint for a simple form, then use some data from that form to send an email to the user. We will assume that you have already created the form in forms4health (<a href="https://docs.forms4health.com/docs/getting-started/" target="_blank" rel="noreferrer">See the forms4health documentation if you are unsure how to do this.</a>)</p><h2 id="pre-requisites" tabindex="-1">Pre-requisites <a class="header-anchor" href="#pre-requisites" aria-label="Permalink to &quot;Pre-requisites&quot;">​</a></h2><p>For the purposes of this guide, we will be using <a href="https://sandbox-forms.forms4health.com/demoOrg/SinglePass/greeting/1/Load" target="_blank" rel="noreferrer">this form.</a>. It has been setup so that the following control names are used:</p><ul><li><code>first-name</code></li><li><code>last-name</code></li><li><code>email</code></li></ul><p>It has been configured to point to our endpoint already.</p><h2 id="setting-up-the-endpoint" tabindex="-1">Setting up the endpoint <a class="header-anchor" href="#setting-up-the-endpoint" aria-label="Permalink to &quot;Setting up the endpoint&quot;">​</a></h2><h3 id="definition" tabindex="-1">Definition <a class="header-anchor" href="#definition" aria-label="Permalink to &quot;Definition&quot;">​</a></h3><p><img src="'+n+'" alt="Defining the endpoint"> Head over to the Endpoints page using the top menu, and click the large plus button at the top to add a new endpoint.</p><p>The first step is to define our endpoint name and tasks it will perform. We’ll go through and add details to these tasks later. The Endpoint Name is important. This should be descriptive, but not too long because it’s used in the url for the endpoint. Task names should also be descriptive for your reference later. In our case, we’ll use <code>do-greeting</code> as an endpoint name. We also create a single Email type task called Send an Email.</p><p>We&#39;ll also leave the other settings as defaults: HTTP Method is POST, Endpoint Type is HTTP, no authentication, and Stop on Failure on.</p><p>Hit the Next button at the bottom to continue.</p><h3 id="input-data" tabindex="-1">Input data <a class="header-anchor" href="#input-data" aria-label="Permalink to &quot;Input data&quot;">​</a></h3><p><img src="'+i+'" alt="Shaping the input"></p><p>Our input data can start to get complex when we&#39;re dealing with forms. The best way to define this is by providing the form schema. This can be found at a url that looks like: <code>https://[environment]-forms.forms4health.com/api/formschema/[form-name]/[form-version]</code>. Our form is in the <code>sandbox</code> environment, has a name of <code>greeting</code>, and a version of <code>1</code>, therefore our schema is found here: <a href="https://sandbox-forms.forms4health.com/api/formschema/greeting/1" target="_blank" rel="noreferrer"><code>https://sandbox-forms.forms4health.com/api/formschema/greeting/1</code></a></p><p>Before we do anything else, we should change the Format to <code>XML</code>. Then select the View tab of the context panel (the Eye icon on the right hand side). Replace its contents with the schema from our link. You may need to refresh the data on the left hand side so it matches our new schema.</p><h3 id="creating-the-email" tabindex="-1">Creating the email <a class="header-anchor" href="#creating-the-email" aria-label="Permalink to &quot;Creating the email&quot;">​</a></h3><p>We&#39;ll keep our email simple, but it will use data from our form for the sender, subject, and content. We&#39;ll ignore attachments and custom SMTP as it&#39;s beyond the scope of this guide.</p><p><img src="'+r+'" alt="Shaping the input"></p><p>Make sure you have the Data tab open in the context panel (list icon). Data origin should be <code>Input</code> by default, as we don&#39;t have any other tasks that provide us with data to use. Scroll down, and you should find the fields we&#39;re interested in. Click into the <code>To</code> field, and then click the arrow next to <code>email</code> in the context panel.</p><p><em>note:</em> Clicking the arrow to insert this does more than just add the text <code>--*email*--</code> to the field. It also links this to the data itself. By clicking in the middle of this text, you should see a new link icon appear. You can click this to see details of the underlying XPath that&#39;s used to link this to data.</p><p>Now, add a subject of <code>Hello --*first-name*--!</code> (again, using the context panel to insert <code>first-name</code>), and a content of <code>Hello --*first-name*-- --*last-name*--!</code></p><p>Click <code>Next</code> when you&#39;re ready. Tick the box to deploy to production, and then hit <code>Save &amp; Deploy</code>.</p><h2 id="trying-it-out" tabindex="-1">Trying it out <a class="header-anchor" href="#trying-it-out" aria-label="Permalink to &quot;Trying it out&quot;">​</a></h2><p>Now that we&#39;ve created our endpoint, we can submit our form and see our endpoint in action! <a href="https://sandbox-forms.forms4health.com/demoOrg/SinglePass/greeting/1/Load" target="_blank" rel="noreferrer">Open the form and give it a go.</a> Once you submit the form, you should receive an email from AireGlu saying Hi!</p>',25),d=[h];function l(c,p,m,u,f,g){return o(),t("div",null,d)}const _=e(s,[["render",l]]);export{k as __pageData,_ as default};
