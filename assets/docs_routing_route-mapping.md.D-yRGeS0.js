import{_ as e,c as t,o as a,a4 as n}from"./chunks/framework.ttppV29E.js";const o="/assets/empty-dialog.DUi1sLRP.png",y=JSON.parse('{"title":"Route Mapping","description":"","frontmatter":{},"headers":[],"relativePath":"docs/routing/route-mapping.md","filePath":"docs/routing/route-mapping.md","lastUpdated":1748873210000}'),i={name:"docs/routing/route-mapping.md"},s=n('<h1 id="route-mapping" tabindex="-1">Route Mapping <a class="header-anchor" href="#route-mapping" aria-label="Permalink to &quot;Route Mapping&quot;">​</a></h1><p>Route Mappings allow you to setup a custom HTTP route to any endpoint within your tenancy. This can be useful for integrating with existing systems expecting certain route patterns, or just to make an address easier to understand. It will also allow you to forward methods, meaning that you can point a POST route mapping at a PUT endpoint and all will continue working.</p><p>Standard AireGlu endpoint URLs follow this pattern:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://domain/tenant/endpoint/environmentOrVersion</span></span></code></pre></div><p>With custom routing, you can use:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>https://domain/tenant/custompath</span></span></code></pre></div><h2 id="enabling-route-mapping" tabindex="-1">Enabling route mapping <a class="header-anchor" href="#enabling-route-mapping" aria-label="Permalink to &quot;Enabling route mapping&quot;">​</a></h2><p>In order to gain access to the Routing screen, a user will need the following permissions in AireIdentity:</p><ul><li>list:RouteMapping</li><li>view:RouteMapping</li><li>edit:RouteMapping</li><li>delete:RouteMapping</li><li>create:RouteMapping</li></ul><h2 id="creating-a-route-mapping" tabindex="-1">Creating a route mapping <a class="header-anchor" href="#creating-a-route-mapping" aria-label="Permalink to &quot;Creating a route mapping&quot;">​</a></h2><p>From the Routing screen, select the Plus icon and you should see a dialog like this: <img src="'+o+`" alt="route mapping dialog"></p><h4 id="method-to-match" tabindex="-1">Method to match <a class="header-anchor" href="#method-to-match" aria-label="Permalink to &quot;Method to match&quot;">​</a></h4><p>This is the method that calls to your custom route will be made on. This does not have to match the method of your endpoint - your calls will be forwarded correctly.</p><h4 id="route-to-match" tabindex="-1">Route to match <a class="header-anchor" href="#route-to-match" aria-label="Permalink to &quot;Route to match&quot;">​</a></h4><p>The route you want to use to call your endpoint. This can be specified in 2 ways:</p><ul><li>a simple route, e.g. /my/custom/route. This will match calls to <a href="https://glu-api.aireinnovate.com/yourtenant/my/custom/route" target="_blank" rel="noreferrer">https://glu-api.aireinnovate.com/yourtenant/my/custom/route</a></li><li>a regex. This must include string start and end characters ^$ e.g ^/[abc]{3}/myendpoint$ which would match: <ul><li><a href="https://glu-api.aireinnovate.com/yourtenant/aaa/myendpoint" target="_blank" rel="noreferrer">https://glu-api.aireinnovate.com/yourtenant/aaa/myendpoint</a></li><li><a href="https://glu-api.aireinnovate.com/yourtenant/jyd/myendpoint" target="_blank" rel="noreferrer">https://glu-api.aireinnovate.com/yourtenant/jyd/myendpoint</a></li><li>etc</li></ul></li></ul><h4 id="endpoint" tabindex="-1">Endpoint <a class="header-anchor" href="#endpoint" aria-label="Permalink to &quot;Endpoint&quot;">​</a></h4><p>The endpoint that you wish to forward the route to.</p><h4 id="version" tabindex="-1">Version <a class="header-anchor" href="#version" aria-label="Permalink to &quot;Version&quot;">​</a></h4><p>The version of the endpoint that you wish to forward to. If in doubt selecting Production will forward to the latest released endpoint version.</p><h2 id="notes" tabindex="-1">Notes <a class="header-anchor" href="#notes" aria-label="Permalink to &quot;Notes&quot;">​</a></h2><ul><li>Custom routing is tenant-specific;</li><li>Ensure your custom routes are unique to avoid conflicts;</li><li>Be careful with regex routes, it is easy to make a path that could match multiple mappings if you make your expressions too permissive;</li><li>All examples assume you are running against our live hosted instance of AireGlu, you may need to replace <a href="https://glu-api.aireinnovate.com" target="_blank" rel="noreferrer">https://glu-api.aireinnovate.com</a> with your target runtime instance.</li><li>If you need to access the routing information from within an endpoint, you can use Liquid. Please see our <a href="/docs/quickstart/liquid.html">Liquid</a> guide</li></ul><h2 id="example-usage" tabindex="-1">Example usage <a class="header-anchor" href="#example-usage" aria-label="Permalink to &quot;Example usage&quot;">​</a></h2><p>You can configure route mapping and endpoints to create a restful URL.</p><p>For example, use route to match: <code>^/weatherforecast/[a-zA-Z0-9]*$</code></p><p>Then within the endpoint extract the last part (in this example, a postcode)</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{</span></span>
<span class="line"><span>    {% assign pathelements = request.paths.original | split: &quot;/&quot; %}</span></span>
<span class="line"><span>    {% assign lastIndex = pathelements.size | minus: 1 %}</span></span>
<span class="line"><span>    &quot;location&quot;: &quot;{{ pathelements[lastIndex] }}&quot;</span></span>
<span class="line"><span>}</span></span></code></pre></div>`,27),r=[s];function l(p,u,h,c,d,m){return a(),t("div",null,r)}const f=e(i,[["render",l]]);export{y as __pageData,f as default};
